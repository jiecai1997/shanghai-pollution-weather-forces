{
    "collab_server" : "",
    "contents" : "---\ntitle: \"attempt1\"\noutput: html_document\n---\n\nimport packages\n```{r import, echo=FALSE}\nlibrary(arm)\nlibrary(pROC)\nlibrary(ggplot2)\n```\n\nread in file\n```{r read in file, echo=FALSE}\ndf_all = read.csv('datasets/ShanghaiPM20100101_20151231.csv')\nattach(df_all)\n```\n\nwe want to subset the dataset, since here are variables and values that we don't need to include.\n\nValues to leave out:\n- Data from years 2010-2011. There a lot of missing data from those years since air pollution was not a large concern then.\n\nVariables to leave out:\n- PM measurements from the Jingan and Xuhui regions (PM_Jingan, PM_Xuhui). There are less reliable than PM measurements from the US consulate, so we only care about the US \n\n```{r data subset, echo=FALSE}\n# observations from year 2013-2015, removing PM_Jingan and PM_Xuhui\ndf_some = df_all[year == 2012 | year == 2013 | year == 2014 | year == 2015,]\ndf_some = df_some[, !(colnames(df_some) %in% c(\"PM_Jingan\",\"PM_Xuhui\"))]\n\n# incomplete observations\ndf_incomplete = df_some[!complete.cases(df_some),]\n\n# decided to remove the missing cases beacuse many were missing data chunks from half a day - 2days, and since the weather varies quite a lot from day to day, we cannot really estimate these missing points from other points around it.\n\n# complete observations only\ndf = df_some[complete.cases(df_some),]\nattach(df)\n```\n\nexplanatory data analysis with each variable against outcome variable, PM_US.Post\n```{r initial exploratory data analysis}\npar(mfrow=c(3,4))\nplot(x = year, y = PM_US.Post, main=\"Year VS PM2.5 Concentration\", xlab=\"Year\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~month,data=df, main=\"Month VS PM2.5 Concentration\", xlab=\"Month\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~day,data=df, main=\"Day VS PM2.5 Concentration\", xlab=\"Day\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~hour,data=df, main=\"Hour VS PM2.5 Concentration\", xlab=\"Hour\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~as.factor(season),data=df, main=\"Season VS PM2.5 Concentration\", xlab=\"Season (Spring, Summer, Fall, Winter)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = DEWP, y = PM_US.Post, main=\"Dew Point VS PM2.5 Concentration\", xlab=\"Dew Point (ºC)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = HUMI, y = PM_US.Post, main=\"Humidity VS PM2.5 Concentration\", xlab=\"Humidity (%)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = TEMP, y = PM_US.Post, main=\"Temperature VS PM2.5 Concentration\", xlab=\"Temperature (ºC)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~cbwd,data=df, main=\"Combined Wind Direction VS PM2.5 Concentration\", xlab=\"Combined Wind Direction\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = Iws, y = PM_US.Post, main=\"Cumulated Wind Speed VS PM2.5 Concentration\", xlab=\"Cumulated wind speed (m/s)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = precipitation, y = PM_US.Post, main=\"Hourly Percipitation VS PM2.5 Concentration\", xlab=\"Hourly Precipitation (mm)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = Iprec, y = PM_US.Post, main=\"Cumulated Percipitation VS PM2.5 Concentration\", xlab=\"Cumulated precipitation (mm)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\n```\n\n```{r basic linear regression}\n# make first basic linear regression with all continous variables, no transformation\nreg1= lm(PM_US.Post ~ year + as.factor(month) + as.factor(day) + as.factor(hour) + as.factor(season) + \n    DEWP + HUMI + PRES + TEMP + as.factor(cbwd) + Iws + precipitation + \n    Iprec, data = df)\nsummary(reg1)\n\n# none of the variables are significantly unimportant\n# we could consider removing the days variable (p >0.3)\n```\n\n```{r multi-collinearity}\n#check for multicollinearity between all continous variables\ncont <- c(2:6, 8:11, 13:15)\ncontVars = df[cont]\ncor(contVars)\n\n# multicollinearity (>0.8) between: pressure & dew point, pressure & temperature, dew point & temperature\n# multicollinear variables: pressure, dew point, temperature\n# this makes intuitive sense because the three weather factors are almost direct factors of each other\n# fortunately, these variables are not messing up the standard errors, so we don't have to remove them\n\n# summary: after looking at multi-collinearity values bewteen variables, we can consider removing: pressure, dew point. \n# next step: We will see which multicollinearity variables we can remove by manually doing some f-tests.\n```\n\n``` {r nested f-test}\n# we will manually use nested f-tests to see if some of the variables can be removed from our regression\n# variables to test: pressure, dew point, temperature, days\n\n# reg1= lm(PM_US.Post ~ year + month + day + hour + as.factor(season) + \n#   DEWP + HUMI + PRES + TEMP + as.factor(cbwd) + Iws + precipitation + \n#   Iprec)\n\n# regression with no pressure variable\nreg_noPRES = lm(PM_US.Post ~ year + month + day + hour + as.factor(season) + \n    DEWP + HUMI + TEMP + as.factor(cbwd) + Iws + precipitation + \n    Iprec, data = df)\n# regression with no dew point variable\nreg_noDEWP = lm(PM_US.Post ~ year + month + day + hour + as.factor(season) + \n    HUMI + PRES + TEMP + as.factor(cbwd) + Iws + precipitation + \n    Iprec, data = df)\n#regression with no temperature\nreg_noTEMP = lm(PM_US.Post ~ year + month + day + hour + as.factor(season) + \n    DEWP + HUMI + PRES + as.factor(cbwd) + Iws + precipitation + \n    Iprec, data = df)\n# regression with no days\nreg_noDAYS = lm(PM_US.Post ~ year + month + hour + as.factor(season) +\n    DEWP + HUMI + PRES + TEMP + as.factor(cbwd) + Iws + precipitation + \n    Iprec, data = df)\n\n# do ANOVA f-test on each of the regressions (VS original regression)\nanova(reg1, reg_noPRES)\nanova(reg1, reg_noDEWP)\nanova(reg1, reg_noTEMP)\nanova(reg1, reg_noDAYS)\n# the only variable we can remove is days\n\n# summary: the 'day' variable can be removed, as shown manually by f-tests\n# next step: try automatically removing variables by backwards selection\n```\n\n```{r backwards selection}\n# first backwards selection: removed 'day' variable\nreg_back1 <- step(reg1,direction=\"backward\") \nsummary(reg_back1)\n# anova shows large p-value, removing is OK\nanova(reg1, reg_back1)\n\n# second backwards selection\nreg_back2 <- step(reg_back1,direction=\"backward\") \nsummary(reg_back2)\n# no further variables removed, nothing smaller than the given AIC\n```\n\n```{r transformations}\n# as shown in the exploratory data analysis, we should do some transformations as many linear regression assumptions are violated\n# have to add 0.01 to transformed x-variables since we cannot log (0)\n# x-variables to transform (non-linearity): log(Iws+0.01), log(precipitation+0.01), log(Iprec+0.01)\n# y-varable to transform (non-constant variance): log(PM_US.Post)\n\n# try with these transformations\nplot(x = month, y = log(PM_US.Post), main=\"Month VS log PM2.5 Concentration\", xlab=\"Month\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = hour, y = log(PM_US.Post), main=\"Hour VS PM2.5 Concentration\", xlab=\"Hour\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nboxplot(log(PM_US.Post)~as.factor(season),data=df, main=\"Season VS log PM2.5 Concentration\", xlab=\"Season (Spring, Summer, Fall, Winter)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = DEWP, y = log(PM_US.Post), main=\"Dew Point VS log PM2.5 Concentration\", xlab=\"Dew Point (ºC)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = HUMI, y = log(PM_US.Post), main=\"Humidity VS PM2.5 Concentration\", xlab=\"Humidity (%)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = TEMP, y = log(PM_US.Post), main=\"Temperature VS log PM2.5 Concentration\", xlab=\"Temperature (ºC)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nboxplot(log(PM_US.Post)~cbwd,data=df, main=\"Combined Wind Direction VS log PM2.5 Concentration\", xlab=\"Combined Wind Direction\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = log(Iws+0.1), y = log(PM_US.Post), main=\"Cumulated Wind Speed VS log PM2.5 Concentration\", xlab=\"Cumulated wind speed (m/s)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = log(precipitation+0.1), y = log(PM_US.Post), main=\"Hourly Percipitation VS log PM2.5 Concentration\", xlab=\"Hourly Precipitation (mm)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\nplot(x = log(Iprec+0.1), y = log(PM_US.Post), main=\"Hourly Percipitation VS log PM2.5 Concentration\", xlab=\"Cumulated precipitation (mm)\", ylab=\"log PM2.5 Concentration (ug/m^3)\")\n\n# these transformations are not ideal but they're fine\n# overall, they fix the non-linear and non-constant variance violations we were concerned about\n```\n\n```{r regression with transformation}\nreg2 = lm(log(PM_US.Post) ~ year + month + hour + as.factor(season) + DEWP + \n    HUMI + PRES + TEMP + as.factor(cbwd) + log(Iws+0.1) + log(precipitation+0.1) + \n    log(Iprec+0.1), data = df)\nsummary(reg2)\n```\n\n```{r readjusting variables}\n# some variables would be easier to interpret if mean centered, or have its values slightly changed in other ways\n\n# dew point, humidity, pressure: to mean-center. We can interpret weather with average dew point, humidity & pressure\nDEWP.c = DEWP - mean(DEWP)\nHUMI.c = HUMI - mean(HUMI)\nPRES.c = PRES - mean(PRES)\n\n# year: -2012, setting year 2012 as the baseline\nyear.n = year - 2012\n\n# month: -1, setting January (1) as the baseline\nmonth.n = month-1\n\n# season: reset 4 (Winter) as the baseline. This way, it's consistant with the year, month & day baseline which would correspond to January 2012.\nseason.n = relevel(as.factor(season), ref = \"4\")\n```\n\n```{r interaction variables}\n# with weather, we expect a lot of interaction variables since a lot of these weather factors impact one another\n\n# common sense: season&temperature, season&percipitation, hour&temperature\n# \n```\n\n```{r }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```{r exploratory data analysis, alt}\nboxplot(PM_US.Post~year,data=df, main=\"Year VS PM2.5 Concentration\", xlab=\"Year\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~month,data=df, main=\"Month VS PM2.5 Concentration\", xlab=\"Month\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~day,data=df, main=\"Day VS PM2.5 Concentration\", xlab=\"Day\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~hour,data=df, main=\"Hour VS PM2.5 Concentration\", xlab=\"Hour\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = DEWP, y = PM_US.Post, main=\"Dew Point VS PM2.5 Concentration\", xlab=\"Dew Point (ºC)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = HUMI, y = PM_US.Post, main=\"Humidity VS PM2.5 Concentration\", xlab=\"Humidity (%)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nplot(x = TEMP, y = PM_US.Post, main=\"Tempeature VS PM2.5 Concentration\", xlab=\"Temperature (ºC)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\nboxplot(PM_US.Post~TEMP,data=df, main=\"Temperature VS PM2.5 Concentration\", xlab=\"Temperature (ºC)\", ylab=\"PM2.5 Concentration (ug/m^3)\")\n```\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## R Markdown\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r cars}\nsummary(cars)\n```\n\n## Including Plots\n\nYou can also embed plots, for example:\n\n```{r pressure, echo=FALSE}\nplot(pressure)\n```\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n",
    "created" : 1513183953770.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2768946361",
    "id" : "1887806F",
    "lastKnownWriteTime" : 1513223302,
    "last_content_update" : 1513223302659,
    "path" : "~/Documents/DUKE/Sophomore/Semester1/STA210/Final Project/attempt1.Rmd",
    "project_path" : "attempt1.Rmd",
    "properties" : {
        "last_setup_crc32" : "244CADB5bb338d19",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}